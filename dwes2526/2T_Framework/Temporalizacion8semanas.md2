## Temporalización 8 semanas

Propuesta de temporalización para 8 semanas, 40 días, 64 horas, (8x8), dividiendo las tareas en función de los objetivos y herramientas a utilizar, con un enfoque en la colaboración mediante GitHub, Trello, y la documentación con Markdown.

Teniendo en cuenta los tutoriales diarios en los primeros 21 días


| Sem. | Fecha | jor    | U.D. | NºSes | Actividad | Actividad prevista                                            |
| ---- | ----- | ------ | ---- | ------ | --------- | ------------------------------------------------------------- |
| 1    | lun   | 06-ene | -    | -      | -         | -                                                             |
| 1    | mar   | 07-ene | -    | -      | -         | -                                                             |
| 1    | mié  | 08-ene | 68   | 6      | 1         | 1 Laravel - Fundamentos                                       |
| 1    | jue   | 09-ene | 69   | 6      | 1         | 2 Laravel - Blade                                             |
| 1    | vie   | 10-ene | 70   | 6      | 1         | 3 Laravel - Migraciones y modelos                             |
| 2    | lun   | 13-ene | 71   | 6      | 3         | 4 Laravel - Controladores                                     |
| 2    | mar   | 14-ene | 72   | 6      | 2         | 5 Laravel - CRUD                                              |
| 2    | mié  | 15-ene | 73   | 6      | 1         | 6 Laravel - API                                               |
| 2    | jue   | 16-ene | 74   | 6      | 1         | 7 Laravel - Seeder, factory, faker.                           |
| 2    | vie   | 17-ene | 75   | 6      | 1         | 8 Laravel - Relaciones                                        |
| 3    | lun   | 20-ene | 76   | 6      | 3         | 9 Laravel - Middleware y Api Auth                             |
| 3    | mar   | 21-ene | 77   | 6      | 2         | 10 Laravel - Auth, Breeze, Jetstream                          |
| 3    | mié  | 22-ene | 78   | 6      | 1         | 11 Laravel - Livewire                                         |
| 3    | jue   | 23-ene | 79   | 6      | 1         | 12 Laravel - Inertia                                          |
| 3    | vie   | 24-ene | 80   | 6      | 2         | 13 Laravel - File Storage                                     |
| 4    | lun   | 27-ene | 81   | 6      | 3         | 14 Laravel - Localización                                    |
| 4    | mar   | 28-ene | 82   | 6      | 2         | 15 Laravel - Mailable                                         |
| 4    | mié  | 29-ene | 83   | 6      | 1         | 16 Laravel - Events, Listeners, Observers, Commands, Schedule |
| 4    | jue   | 30-ene | 84   | 6      | 1         | 17 Laravel - Asset Bundling con Vite y PDF                    |
| 4    | vie   | 31-ene | 85   | 6      | 1         | 18 Laravel - Importar Exportar CSV                            |
| 5    | lun   | 03-feb | 86   | 7      | 3         | 19 Laravel - Utilidades                                       |
| 5    | mar   | 04-feb | 87   | 7      | 2         | 20 Laravel - Testing                                          |
| 5    | mié  | 05-feb | 88   | 7      | 1         | 21 Laravel - Deploy                                           |
| 5    | jue   | 06-feb | 89   | 7      | 1         |                                                               |
| 5    | vie   | 07-feb | 90   | 7      | 1         | Empresa y Mundo Laboral                                       |
| 6    | lun   | 10-feb | 91   | 7      | 3         |                                                               |
| 6    | mar   | 11-feb | 92   | 7      | 2         |                                                               |
| 6    | mié  | 12-feb | 93   | 7      | 1         |                                                               |
| 6    | jue   | 13-feb | 94   | 7      | 1         |                                                               |
| 6    | vie   | 14-feb | 95   | 7      | 1         |                                                               |
| 7    | lun   | 17-feb | 96   | 7      | 1         |                                                               |
| 7    | mar   | 18-feb | 97   | 7      | 2         |                                                               |
| 7    | mié  | 19-feb | 98   | 7      | 1         |                                                               |
| 7    | jue   | 20-feb | 99   | 7      | 1         |                                                               |
| 7    | vie   | 21-feb | 100  | 7      | 1         |                                                               |
| 8    | lun   | 24-feb | 101  | 8      | 3         |                                                               |
| 8    | mar   | 25-feb | 102  | 8      | 2         |                                                               |
| 8    | mié  | 26-feb | 103  | 8      | 1         |                                                               |

---




### **Semana 1 - Fundamentos y Configuración**

* **Día 1-2:** Introducción a Laravel: instalación, estructura básica y configuración del entorno.
* **Día 3-4:** Blade: vistas, plantillas, layouts y componentes.
* **Día 5:** Configuración de repositorio en GitHub, integración de Trello para gestión de tareas y primeras notas de documentación en Markdown.

### **Semana 2 - Modelos, Migraciones y Controladores**

* **Día 6-7:** Migraciones y modelos: creación y manipulación de tablas.
* **Día 8-9:** Controladores: rutas y controladores básicos.
* **Día 10:** Ejemplo completo de CRUD básico. Sincronización del equipo con commits en GitHub y actualización de tareas en Trello.

### **Semana 3 - API y Relaciones**

* **Día 11-12:** Creación de APIs: controladores API, respuestas JSON y uso de Postman.
* **Día 13-14:** Seeder, factory y faker para generación de datos.
* **Día 15:** Relaciones entre modelos: one-to-one, one-to-many, many-to-many.

---

### **Semana 4 - Middleware y Autenticación**

* **Día 16-17:** Middleware y autenticación con Laravel Breeze y Jetstream.
* **Día 18:** Implementación de autenticación con API (JWT o Sanctum).
* **Día 19:** Revisión de avances del equipo, integración y resolución de conflictos en el código.

### **Semana 5 - Componentes Avanzados**

* **Día 20-21:** Introducción a Livewire: creación de componentes dinámicos.
* **Día 22:** Inertia.js: renderizado de vistas con Vue o React.
* **Día 23-24:** File Storage: manejo de archivos y carga dinámica.

### **Semana 6 - Funcionalidades Adicionales**

* **Día 25-26:** Localización: traducciones y formatos regionales.
* **Día 27:** Mailables: creación y envío de correos.
* **Día 28:** Implementación de eventos, listeners y observadores.

### **Semana 7 - Utilidades y Testing**

* **Día 29-30:** Generación de PDFs, bundling de assets con Vite y manejo de CSV.
* **Día 31:** Testing básico y avanzado en Laravel.
* **Día 32:** Revisión de documentación Markdown: añadir ejemplos, mejores prácticas y casos de uso.

### **Semana 8 - Integración y Deploy**

* **Día 33-34:** Creación y uso de comandos, schedule y tareas cron.
* **Día 35:** Revisión completa del proyecto: ajustes, refactorización y pruebas.
* **Día 36-37:** Preparación para deploy: configuración del servidor y migraciones finales.
* **Día 38-39:** Deploy en un entorno de producción (Heroku, AWS o DigitalOcean).
* **Día 40:** Presentación final del proyecto, feedback y cierre.

---

### **Idea de trabajo**

La idea es compatibilizar el aprendizaje guiado con ejemplos de los tutoriales para implementarlo en nuestro proyecto de equipo.

Así, aprenderemos técnicas de Laravel que implementaremos para afianzarlas en nuestro proyecto de forma progresiva.

**De las 8 horas semanales**, la mitad irán para aprender y la otra mitad para poner en práctica lo aprendido en equipo, de forma aproximada

### **Herramientas de Trabajo**

* **GitHub:** Control de versiones y colaboración.
* **Trello:** Gestión de tareas y asignaciones.
* **Markdown:** Documentación en formato claro y estructurado.

### **Entregables Semanales**

* **Semanas 1-3:** Funcionalidades básicas (CRUD, APIs, relaciones).
* **Semanas 4-6:** Componentes avanzados y autenticación.
* **Semanas 7-8:** Proyecto completo con pruebas, documentación y deploy.

Esta temporalización permite un progreso gradual y asegura que todos los miembros se mantengan alineados con las metas del equipo.
