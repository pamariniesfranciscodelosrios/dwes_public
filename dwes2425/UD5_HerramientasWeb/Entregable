# **Objetivos & Entregable UD5**

Iremos creando las diferentes carpetas y archivos PHP, así como su documentación en formato Markdown (.md) para, al finalizar cada semana, subir al menos un commit con los cambios y archivos añadidos, comentando el código debidamente.

## Proyecto UD5_Estado:

+ En este proyecto trabajamos con aplicaciones web que hagan mantenimiento de estado.

## Objetivo

El objetivo de esta actividad es desarrollar un sistema de gestión CRUD (Crear, Leer, Actualizar, Eliminar) utilizando PHP y el patrón Modelo-Vista-Controlador (MVC). haciendo mantenimiento de estado y acceso login con contraseñas.

## Requisitos

1. **Lenguaje** : PHP
2. **Base de Datos** : MySQL
3. **Patrón** : Modelo-Vista-Controlador (MVC)
4. **JavaScript** : Todo el manejo de la interfaz se realizará con PHP y HTML puro.
5. **CSS** : La presentación será básica, solo con HTML.

## Estructura del Proyecto

Crea, al menos, la siguiente estructura de carpetas y archivos en tu entorno de desarrollo:

proyectoUD5/

## Instrucciones

## Documentación del Proyecto

Crea un archivo `README.md` en la raíz del proyecto que contenga la siguiente información:

```
# Proyecto CRUD en PHP

Este proyecto implementa un sistema de gestión CRUD utilizando PHP y el patrón Modelo-Vista-Controlador (MVC) para gestionar una tabla con cuatro columnas. 
No se utiliza JavaScript ni CSS, lo que hace que la aplicación sea sencilla y fácil de entender.

## Requisitos

- PHP 7.0 o superior
- Servidor web (Apache, Nginx, etc.)
- MySQL o Maria

## AUTOR/A:
```

## Mantenimiento repositorio Git Hub

Hay que subir el enlace de dicho repositorio a Moodle.

Los ejercicios que se han de subir al repositorio Github y enlace al aula Moodle serán:

1. Repositorio **Github** público.
2. **Video-presentación** presentando el código de la unidad (al final) y las nuevas características aprendidas, de ebtre **5-10 minutos**.
   1. Lenguaje técnico y no de usuario, comentando los aspectos del lenguaje adquiridos

!!! note "Entregable"

    Se ha de entregar en el tiempo estimado en Moodle

#### **Duración: 5 horas de clase**

#### **Recomendaciones**

- [ ] Usa funciones como `htmlspecialchars()` para evitar problemas de **inyección** de código al imprimir datos de usuarios.
- [ ] Para entornos de producción, es adecuado utilizar **contraseñas seguras** para el usuario de la base de datos.

## Patron de diseño

Aunque para la tarea anterior se pide una estructura concreta, aquí tienes una **estructura de diseño** típica para el MVC que es recomendable ir afianzando ahora antes de seguir avanzando

![1732169565637](image/Entregable/1732169565637.png)

Tienes más info en el apartado [Patrón de diseño](PatronDiseño.md)
